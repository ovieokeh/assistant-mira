datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum ConversionState {
  PENDING
  PROCESSING
  COMPLETED
  FAILED
}

model ConversionJob {
  id           String          @id
  user         String
  url          String
  currentState ConversionState @default(PENDING)
}

enum MessagingState {
  CHAT
  ACTION
}

model User {
  id           Int            @id @default(autoincrement())
  createdAt    DateTime       @default(now())
  updatedAt    DateTime?      @updatedAt
  name         String
  phone        String         @unique
  email        String?        @unique
  profile      Profile?
  messages     Message[]
  currentState MessagingState @default(CHAT)
  actions      Action[]
}

model Profile {
  id        Int       @id @default(autoincrement())
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
  data      String
  userId    Int       @unique
  user      User      @relation(fields: [userId], references: [id])
}

enum Role {
  system
  user
  assistant
}

model Message {
  id        Int       @id @default(autoincrement())
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
  content   String
  role      Role
  userId    Int
  user      User      @relation(fields: [userId], references: [id])
  actionId  Int?
  action    Action?   @relation(fields: [actionId], references: [id])
}

model Action {
  id        Int          @id @default(autoincrement())
  createdAt DateTime     @default(now())
  updatedAt DateTime?    @updatedAt
  name      String
  messages  Message[]
  user      User         @relation(fields: [userId], references: [id])
  userId    Int
  status    ActionStatus @default(PENDING)
}

enum ActionStatus {
  PENDING
  CANCELLED
  COMPLETED
}
